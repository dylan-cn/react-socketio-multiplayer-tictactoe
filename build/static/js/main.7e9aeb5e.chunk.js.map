{"version":3,"sources":["logo.svg","helpers/socket.js","App.js","index.js"],"names":["module","exports","socket","socketIOClient","App","props","findGame","state","inGame","emit","setState","displayWinner","boardClick","e","rowIdx","colIdx","gameId","gameRoom","id","displayWinnerText","winner","winnerStatus","NO_WINNER","TIE","renderBoard","Container","className","gameStatus","SEARCHING","playerTurn","IN_PROGRESS","gameBoard","map","row","console","log","Row","key","col","value","Object","keys","length","gameState","Col","onClick","fetch","gameStatusRes","json","gameStatusJson","winnerStatusRes","winnerStatusJson","this","on","response","FINISHED","src","logo","alt","Button","variant","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e9aeb5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import socketIOClient from 'socket.io-client';\r\n\r\nconst socket = socketIOClient('http://localhost:8080');\r\n\r\n\r\nexport default socket;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from './logo.svg';\nimport './App.css';\nimport socket from './helpers/socket';\n\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            gameRoom: {},\n            gameStatus: null,\n            winnerStatus: '',\n            inGame: false,\n            gameBoard: [\n                [0, 1, 2],\n                [3, 4, 5],\n                [6, 7, 8]\n            ],\n            displayWinner: false,\n        }\n    }\n\n    async componentDidMount() {\n        const gameStatusRes = await fetch('/api/game_status');\n        const gameStatusJson = await gameStatusRes.json();\n\n        const winnerStatusRes = await fetch('/api/game_winner');\n        const winnerStatusJson = await winnerStatusRes.json();\n\n        this.setState({ gameStatus: gameStatusJson, winnerStatus: winnerStatusJson });\n\n        socket.on('setGameRoom', response => {\n            this.setState({ gameRoom: response });\n\n            // When the game ends, reset game state\n            if (this.state.gameRoom.gameStatus === this.state.gameStatus.FINISHED) {\n                this.setState({ inGame: false, displayWinner: true });\n\n                // signify end of game\n                socket.emit('endGame');\n            }\n            console.log(this.state.gameRoom);\n        });\n    }\n\n    findGame = () => {\n        if (!this.state.inGame) {\n            socket.emit('findGame');\n            this.setState({ inGame: true, displayWinner: false });\n        }\n    }\n\n    boardClick = (e, rowIdx, colIdx) => {\n        //console.log(e.target.id, rowIdx, colIdx);\n        socket.emit('makeMove', {\n            gameId: this.state.gameRoom.id,\n            rowIdx,\n            colIdx,\n        });\n    }\n\n    displayWinnerText = () => {\n        if (this.state.displayWinner) {\n            if (this.state.gameRoom.winner === this.state.winnerStatus.NO_WINNER || this.state.gameRoom.winner === this.state.winnerStatus.TIE) {\n                return (\n                    <p>There was no winner for this game.</p>\n                );\n            }\n\n            if (this.state.gameRoom.winner === socket.id) {\n                return (\n                    <p>You won!</p>\n                );\n            } else {\n                if (this.state.gameRoom.winner !== '') {\n                    return (\n                        <p>You lost!</p>\n                    );\n                }\n            }\n        }\n    }\n\n    renderBoard = () => {\n        return (\n            <Container className=\"game-container\">\n                {this.state.displayWinner ? '' : this.state.gameRoom.gameStatus === this.state.gameStatus.SEARCHING ? <p>Waiting for an opponent...</p> : (this.state.gameRoom.playerTurn === socket.id && this.state.gameRoom.gameStatus === this.state.gameStatus.IN_PROGRESS) ? <p>It's your turn!</p> : <p>Waiting for your opponent to make a move...</p>}\n\n                {this.displayWinnerText()}\n\n                {\n                    this.state.gameBoard.map((row, rowIdx) => {\n                        console.log(row);\n                        return (\n                            <Row key={rowIdx}>\n                                {\n                                    this.state.gameBoard[rowIdx].map((col, colIdx) => {\n                                        let value = 0;\n\n                                        if (Object.keys(this.state.gameRoom).length > 0) {\n                                            value = this.state.gameRoom.gameState[rowIdx][colIdx];\n                                        }\n\n                                        return (\n                                            <Col key={rowIdx + colIdx} className=\"game__box\" onClick={(e) => this.boardClick(e, rowIdx, colIdx)}>{value === '-' ? '' : value}</Col>\n                                        )\n                                    })\n                                }\n                            </Row>\n                        )\n                    })\n                }\n            </Container>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <p>\n                        A multiplayer Tic Tac Toe game using Socket.io\n                    </p>\n                </header>\n\n                <br />\n\n                {!this.state.inGame && <Button variant=\"outline-primary\" onClick={this.findGame}>Find Game</Button>}\n\n                {(this.state.inGame || this.state.displayWinner) && this.renderBoard()}\n            </div >\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}